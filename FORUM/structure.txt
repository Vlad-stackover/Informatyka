// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs


Table users {
  id integer [primary key]
  username varchar
  email varchar
  password_hash varchar
  created_at timestamp
}

Table topics {
  id integer [primary key]
  name varchar
  
}

Table posts {
  id integer [primary key]
  title varchar
  content text [note: 'Content of the post']
  user_id integer
  topic_id varchar
  created_at timestamp
}

Table comments {
  id integer [primary key]
  content varchar
  user_id integer
  post_id integer
  created_at timestamp
}

Table likes {
  id integer [primary key]
  user_id integer
  post_id integer
  created_at timestamp
}





Ref: posts.user_id > users.id // many-to-one
Ref: posts.topic_id > topics.id // many-to-one
Ref: comments.user_id > users.id // many-to-one
Ref: comments.post_id > posts.id
Ref: likes.user_id > users.id
Ref: likes.post_id > posts.id


//Updated V2.0

CREATE TABLE User (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    password_hash VARCHAR(255),
    created_at DATETIME,
    updated_at DATETIME
);

CREATE TABLE Category (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    created_at DATETIME,
    updated_at DATETIME
);

CREATE TABLE Post (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    content TEXT,
    user_id INT,
    category_id INT,
    created_at DATETIME,
    updated_at DATETIME,
    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (category_id) REFERENCES Category(id)
);

CREATE TABLE Comment (
    id INT PRIMARY KEY,
    content TEXT,
    user_id INT,
    post_id INT,
    created_at DATETIME,
    updated_at DATETIME,
    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (post_id) REFERENCES Post(id)
);

CREATE TABLE Like (
    id INT PRIMARY KEY,
    user_id INT,
    post_id INT,
    
    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (post_id) REFERENCES Post(id)
);

CREATE TABLE Unlike (
    id INT PRIMARY KEY,
    user_id INT,
    post_id INT,
    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (post_id) REFERENCES Post(id)
);